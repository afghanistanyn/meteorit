<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.calidos.dani.meteorit</groupId>
	<artifactId>meteorit-backend-zookeeper</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>rpm</packaging>

	<name>Meteorit system backend zookeeper component</name>
	<description>Downloads zookeper and runs it under 'mon' supervisor
	</description>
    <inceptionYear>2013</inceptionYear>
    <url>http://dani.calidos.com</url>
    
    <parent>
    	<groupId>com.calidos.dani.meteorit</groupId>
		<artifactId>meteorit-compile-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
    </parent>
    
    <properties>
		<zookeeper.version_>3.4.5</zookeeper.version_>
		<zookeeper.url_>http://ftp.cixug.es/apache/zookeeper/zookeeper-${zookeeper.version_}/zookeeper-${zookeeper.version_}.tar.gz</zookeeper.url_>
		<zookeeper.sourcefolder_>${project.build.directory}/zookeeper-${zookeeper.version_}</zookeeper.sourcefolder_>
		<zookeeper.installfolder_>${install.prefix_}/zookeeper</zookeeper.installfolder_>
		<zookeeper.datafolder_>/var/lib/zookeeper</zookeeper.datafolder_>
		<zookeeper.logfolder_>/var/log/zookeeper</zookeeper.logfolder_>
		<zookeeper.username_>zookeeper</zookeeper.username_>
		<zookeeper.groupname_>zookeeper</zookeeper.groupname_>
		<skipPatch_>false</skipPatch_>	<!-- to skip reapplying patch -->
    </properties>
    
    <build>
    
    <resources>	<!-- this overwrites zookeeper's default logging properties file -->
    	<resource>
    		<directory>src/main/resources/conf</directory>
    		<targetPath>${zookeeper.sourcefolder_}/conf</targetPath>
    		<includes>
    			<include>log4j.properties</include>
    			<include>zookeeper-env.sh</include>
    		</includes>
    		<filtering>true</filtering>
    	</resource>
    </resources>
   		<plugins>

            <plugin>	<!-- Download and expand whatever is needed -->
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <get src="${zookeeper.url_}" 
                                	 dest="${project.build.directory}/zookeeper-${zookeeper.version_}.tar.gz" skipexisting="true" />
                                <untar src="${project.build.directory}/zookeeper-${zookeeper.version_}.tar.gz" 
                                	   dest="${project.build.directory}" compression="gzip"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
		    </plugin>
		    
		    <plugin>	<!-- zookeeper configuration patch (diff -u zoo_sample.cfg zoo.cfg) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-patch-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<backups>false</backups>
					<patchFile>${project.build.outputDirectory}/filtered-zoo.cfg.patch</patchFile>
					<targetDirectory>${zookeeper.sourcefolder_}/conf</targetDirectory>
					<originalFile>${zookeeper.sourcefolder_}/conf/zoo_sample.cfg</originalFile>
					<destFile>${zookeeper.sourcefolder_}/conf/zoo.cfg</destFile>
					<skipApplication>${skipPatch_}</skipApplication>
				</configuration>
				<executions>
					<execution>
						<id>patch</id>
						<phase>process-classes</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		    
			<plugin>	<!-- package as rpm, yay -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-2</version>
                <extensions>true</extensions>

                <configuration>
                    <packager>dani</packager>
                    <distribution>Calidos</distribution>
                    <group>Calidos/Meteorit</group>
                    <copyright>See installed LICENSE file</copyright>
                    <summary>${project.name}</summary>
                    <description>${project.description}</description>
                    <url>${project.url}</url>
                    <prefix>${install.prefix_}</prefix>
                    <needarch>${binary.architecture_}</needarch>

	    			<icon />

                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                        <defineStatement>_name ${project.artifactId}</defineStatement>
                        <defineStatement>_app ${project.artifactId}</defineStatement>
                    </defineStatements>

                    <defaultDirmode>755</defaultDirmode>
                    <defaultFilemode>644</defaultFilemode>
                    <defaultUsername>${zookeeper.username_}</defaultUsername>
                    <defaultGroupname>${zookeeper.groupname_}</defaultGroupname>
                               
                    <requires>
                    	<require>shunit2 &gt;= 2.1.6</require>      
                    	<require>meteorit-env</require>
                    	<require>meteorit-backend-mon</require>
                    </requires>
                    	
                    <mappings>
                                        	
						<!-- 'zookeeper' mappings -->
						<mapping>
							<sources>
								<source>
									<location>${zookeeper.sourcefolder_}/bin</location>
									<includes>
										<include>*.sh</include>
									</includes>
								</source>
							</sources>
							<directory>${zookeeper.installfolder_}/bin</directory>
							<directoryIncluded>true</directoryIncluded>
							<username>${zookeeper.username_}</username>
							<groupname>${zookeeper.groupname_}</groupname>
							<filemode>755</filemode>
						</mapping>
						<mapping>
							<sources>
								<source>
									<location>${zookeeper.sourcefolder_}/zookeeper-${zookeeper.version_}.jar</location>
								</source>
							</sources>
							<directory>${zookeeper.installfolder_}</directory>
						</mapping>
						<mapping>
							<sources>
								<source>
									<location>${zookeeper.sourcefolder_}/conf/</location>
									<includes>
										<include>zoo.cfg</include>
										<include>log4j.properties</include>
									</includes>
								</source>
							</sources>
							<directory>${zookeeper.installfolder_}/conf</directory>
						</mapping>
						<mapping>	<!-- data folder -->
							<directory>${zookeeper.datafolder_}</directory>
							<username>root</username>
							<groupname>${zookeeper.groupname_}</groupname>
							<filemode>775</filemode>							
						</mapping>
						<mapping>	<!-- data folder -->
							<directory>${zookeeper.logfolder_}</directory>
							<username>root</username>
							<groupname>${zookeeper.groupname_}</groupname>
							<filemode>775</filemode>	
						</mapping>
						<mapping>	<!-- init.d scripts, as root -->
                    		<sources>
                    			<source>
                    				<location>${project.build.outputDirectory}/init.d</location>
                    			</source>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>755</filemode>                  		
                       		<directory>/etc/init.d</directory>  		
                       		<directoryIncluded>false</directoryIncluded>
                    	</mapping>	
						
                    </mappings>
					<preinstallScriptlet>
						<scriptFile>${project.build.directory}/preinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>                    
					<postinstallScriptlet>
						<scriptFile>${project.build.directory}/postinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>                    
					<preremoveScriptlet>
						<scriptFile>${project.build.directory}/preremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>                    
					<postremoveScriptlet>
						<scriptFile>${project.build.directory}/postremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>
			    </configuration>
		   </plugin>
		    
		    
		</plugins>
	</build>
		    
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>Copyright (C) 2013 Daniel Giribet</comments>
		</license>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>ZookKeeper credits (http://zookeeper.apache.org/credits.html)</comments>
		</license>
	</licenses>	
		    
</project>
		    