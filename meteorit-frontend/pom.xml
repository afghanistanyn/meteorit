<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.calidos.dani.meteorit</groupId>
	<artifactId>meteorit-frontend</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Meteorit system frontend generator</name>
	<description>Downloads nginx and the relevant modules and compiles it onto a specific package
	</description>
    <inceptionYear>2013</inceptionYear>
    <url>http://dani.calidos.com</url>
    
    <properties>
    	<nginx.filename_>nginx-1.2.3</nginx.filename_>
    	<nginx.url_>http://nginx.org/download/${nginx.filename_}.tar.gz</nginx.url_>
    	<nginx.sourcefolder_>${project.build.directory}/${nginx.filename_}</nginx.sourcefolder_>
    	<nginx.tempfolder_>${project.build.directory}/${nginx.filename_}-tmp</nginx.tempfolder_>
    	<nginx.username_>nginx</nginx.username_>
    	<nginx.groupname_>${nginx.username_}</nginx.groupname_>
    	<nginx.installfolder_>/opt/nginx</nginx.installfolder_>
    	<redis2-module.name_>redis2-nginx-module</redis2-module.name_>
    	<redis2-module.url_>https://github.com/agentzh/redis2-nginx-module/archive/v0.09.tar.gz</redis2-module.url_>
    	<redis2-module.sourcefolder_>${project.build.directory}/${redis2-module.name_}-0.09</redis2-module.sourcefolder_>
		<lua.name_>LuaJIT-2.0.1</lua.name_>
		<lua.url_>http://luajit.org/download/${lua.name_}.tar.gz</lua.url_>
		<lua.installfolder_>/opt/lj2</lua.installfolder_>
		<lua.tempfolder_>${project.build.directory}/${lua.name_}-tmp</lua.tempfolder_>
		<lua.tempfolder2_>${project.build.directory}/${lua.name_}-tmp2</lua.tempfolder2_>
    </properties>
    
    <build>
    
	    <resources>
	    	<resource>	<!-- compile script -->
	    		<directory>${basedir}/src/main/bash</directory>
	    		<targetPath>${project.build.directory}</targetPath>
	    		<filtering>true</filtering>
	    	</resource>
	    	<resource>
	    		<directory>${basedir}/src/main/resources</directory>
	    		<targetPath>${project.build.outputDirectory}</targetPath>
	    		<filtering>true</filtering>
	    	</resource>
	    </resources>
    
    	<plugins>
        
            <!-- Download and expand whatever is needed -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <get src="${nginx.url_}" 
                                dest="${project.build.directory}/" skipexisting="true" />
                                <untar src="${project.build.directory}/${nginx.filename_}.tar.gz" dest="${project.build.directory}" compression="gzip"/>
                                <get src="${redis2-module.url_}" 
                                dest="${project.build.directory}/${redis2-module.name_}.tar.gz" skipexisting="true" />
                                <untar src="${project.build.directory}/${redis2-module.name_}.tar.gz" dest="${project.build.directory}" compression="gzip"/>
                                <get src="${lua.url_}" 
                                dest="${project.build.directory}/${lua.name_}.tar.gz" skipexisting="true" />
                                <untar src="${project.build.directory}/${lua.name_}.tar.gz" dest="${project.build.directory}" compression="gzip"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
		    </plugin>
			
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
					<executions>
						<execution>
							<id>compile-and-make</id>
							<phase>compile</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>bash</executable>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<arguments>
									<argument>-c</argument>
									<argument>${project.build.directory}/meteorit-frontend-compile.sh</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
	    
	  		<!-- package as rpm, yay -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-2</version>
                <extensions>true</extensions>

                <configuration>
                    <packager>dani</packager>
                    <distribution>Calidos</distribution>
                    <group>Calidos/Meteorit</group>
                    <copyright>${project.inceptionYear}, ${project.organization.name}</copyright>
                    <summary>${project.name}</summary>
                    <description>${project.description}</description>
                    <url>${project.url}</url>
                    <prefix>${nginx.installfolder_}</prefix>
                    <needarch>x86_64</needarch>

	    			<icon />

                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                        <defineStatement>_name ${project.artifactId}</defineStatement>
                        <defineStatement>_app ${project.artifactId}</defineStatement>
                    </defineStatements>

                    <defaultDirmode>755</defaultDirmode>
                    <defaultFilemode>644</defaultFilemode>
                    <defaultUsername>${nginx.username_}</defaultUsername>
                    <defaultGroupname>${nginx.groupname_}</defaultGroupname>
                    
                    <requires>
                    	<require>redis</require>
                    </requires>
                    
                    <mappings>
                    
                    	<mapping>	<!-- nginx mapping -->
                    		<sources>
                    			<source>
                    				<location>${nginx.tempfolder_}/${nginx.installfolder_}</location>
                    				<excludes>
<!--                    					<exclude>sbin/nginx</exclude>-->
                    				</excludes>
                    			</source>
                    		</sources>
                    		<directory>${nginx.installfolder_}</directory>
                    		<recurseDirectories>false</recurseDirectories>
                    	</mapping>
                    	<mapping>	<!-- nginx binary 755 mapping -->
                    		<sources>
                    			<source>
                    				<location>${nginx.tempfolder_}/${nginx.installfolder_}/sbin/nginx</location>
                    			</source>
                    		</sources>
                    		<directory>${nginx.installfolder_}/sbin</directory>
                    		<directoryIncluded>false</directoryIncluded>
                    		<filemode>755</filemode>
                    	</mapping>
                    	
                    	<mapping>	<!-- init.d scripts, as root -->
                    		<sources>
                    			<source>
                    				<location>${project.build.outputDirectory}/init.d</location>
                    			</source>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>755</filemode>                  		
                       		<directory>/etc/init.d</directory>        		
                       		<directoryIncluded>false</directoryIncluded>
                    	</mapping>
                    	
                    	<!-- Lua JIT mappings -->
						<mapping>
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}</directory>
						</mapping>
							
						<mapping>		<!-- BIN -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/bin</directory>
						</mapping>
                        <mapping>	
                    		<sources>
                    			<source>
                    				<location>${lua.tempfolder_}/${lua.installfolder_}/bin</location>
                    				<excludes>
                    					<exclude>luajit</exclude>
                    				</excludes>
                    			</source>
                    			<softlinkSource>
                    				<destination>luajit</destination>
                    				<location>luajit-2.0.1</location>
                    			</softlinkSource>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>755</filemode>
                       		<directory>${lua.installfolder_}/bin</directory>
                       		<directoryIncluded>false</directoryIncluded>
                    	</mapping>        
                    	
                    	<mapping>		<!-- INCLUDE -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/include</directory>
						</mapping>
                    	<mapping>
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/include/luajit-2.0</directory>
						</mapping>
                        <mapping>	
                    		<sources>
                    			<source>
                    				<location>${lua.tempfolder_}/${lua.installfolder_}/include/luajit-2.0</location>
                    			</source>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>644</filemode>
                       		<directory>${lua.installfolder_}/include/luajit-2.0</directory>
                       		<directoryIncluded>false</directoryIncluded>
                    	</mapping>        
                    	
                    	<mapping>		<!-- LIB -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/lib</directory>
						</mapping>
						<mapping>	
                    		<sources>
                    			<source>
                    				<location>${lua.tempfolder_}/${lua.installfolder_}/lib/libluajit-5.1.so.2.0.1</location>
                    			</source>
                    			<softlinkSource>
                    				<destination>libluajit-5.1.so</destination>
                    				<location>libluajit-5.1.so.2.0.1</location>
                    			</softlinkSource>
                    			<softlinkSource>
                    				<destination>libluajit-5.1.so.2</destination>
                    				<location>libluajit-5.1.so.2.0.1</location>
                    			</softlinkSource>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>755</filemode>
                       		<directory>${lua.installfolder_}/lib</directory>
                       		<directoryIncluded>false</directoryIncluded>
                       	</mapping>
                       	<mapping>	
                    		<sources>
                    			<source>
                    				<location>${lua.tempfolder_}/${lua.installfolder_}/lib/libluajit-5.1.a</location>
                    			</source>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>644</filemode>
                       		<directory>${lua.installfolder_}/lib</directory>
                       		<directoryIncluded>false</directoryIncluded>
                       	</mapping>
                       	
                    	<mapping>		<!-- LIB/LUA -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/lib/lua</directory>
						</mapping>
                    	<mapping>		<!-- LIB/LUA -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/lib/lua/5.1</directory>
						</mapping>
                    	<mapping>		<!-- LIB/PKGCONFIG -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/lib/pkgconfig</directory>
						</mapping>
                       	<mapping>	
                    		<sources>
                    			<source>
                    				<location>${lua.tempfolder_}/${lua.installfolder_}/lib/pkgconfig/luajit.pc</location>
                    			</source>
                    		</sources>
 	                        <username>root</username>
                            <groupname>root</groupname>  
                            <filemode>644</filemode>
                       		<directory>${lua.installfolder_}/lib/pkgconfig</directory>
                       		<directoryIncluded>false</directoryIncluded>
                       	</mapping>
                       	
						<mapping>		<!-- SHARE -->
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/share</directory>
						</mapping>
						<mapping>		
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/share/lua</directory>
						</mapping>
						<mapping>		
							<username>root</username>
							<groupname>root</groupname>
							<filemode>755</filemode>
							<directory>${lua.installfolder_}/share/lua/5.1</directory>
						</mapping>


                    </mappings>

					<preinstallScriptlet>
						<scriptFile>target/classes/preinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>                    
					<postinstallScriptlet>
						<scriptFile>target/classes/postinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>                    
					<preremoveScriptlet>
						<scriptFile>target/classes/preremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>                    
					<postremoveScriptlet>
						<scriptFile>target/classes/postremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>                    
			    </configuration>
		   </plugin>
	    </plugins>
	    
    </build>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>Copyright 2013 Daniel Giribet</comments>
		</license>
		<license>
			<name>2-clause BSD</name>
			<url>http://nginx.org/LICENSE</url>
			<comments>* Copyright (C) 2002-2012 Igor Sysoev
					  * Copyright (C) 2011-2013 Nginx, Inc.</comments>
		</license>
	</licenses>
	
	<!-- 
	
	==== Installing LuaJIT 2.0.1 to /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp ====
mkdir -p /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/bin /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/include/luajit-2.0 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/share/man/man1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/pkgconfig /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/share/luajit-2.0.1/jit /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/share/lua/5.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/lua/5.1
cd src && install -m 0755 luajit /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/bin/luajit-2.0.1
cd src && test -f libluajit.a && install -m 0644 libluajit.a /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.a || :
rm -f /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/bin/luajit /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so.2.0.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so
cd src && test -f libluajit.so && \
	  install -m 0755 libluajit.so /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so.2.0.1 && \
	  ldconfig -n /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib && \
	  ln -sf libluajit-5.1.so.2.0.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so && \
	  ln -sf libluajit-5.1.so.2.0.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/libluajit-5.1.so || :
cd etc && install -m 0644 luajit.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/share/man/man1
cd etc && sed -e "s|^prefix=.*|prefix=/home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp|" luajit.pc > luajit.pc.tmp && \
	  install -m 0644 luajit.pc.tmp /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/lib/pkgconfig/luajit.pc && \
	  rm -f luajit.pc.tmp
cd src && install -m 0644 lua.h lualib.h lauxlib.h luaconf.h lua.hpp luajit.h /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/include/luajit-2.0
cd src/jit && install -m 0644 bc.lua v.lua dump.lua dis_x86.lua dis_x64.lua dis_arm.lua dis_ppc.lua dis_mips.lua dis_mipsel.lua bcsave.lua vmdef.lua /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/share/luajit-2.0.1/jit
ln -sf luajit-2.0.1 /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp/bin/luajit
==== Successfully installed LuaJIT 2.0.1 to /home/meteorit/meteorit/meteorit-frontend/target/LuaJIT-2.0.1-tmp ====


├── bin
│   ├── luajit -> luajit-2.0.1
│   └── luajit-2.0.1
├── include
│   └── luajit-2.0
│       ├── lauxlib.h
│       ├── luaconf.h
│       ├── lua.h
│       ├── lua.hpp
│       ├── luajit.h
│       └── lualib.h
├── lib
│   ├── libluajit-5.1.a
│   ├── libluajit-5.1.so -> libluajit-5.1.so.2.0.1
│   ├── libluajit-5.1.so.2 -> libluajit-5.1.so.2.0.1
│   ├── libluajit-5.1.so.2.0.1
│   ├── lua
│   │   └── 5.1
│   └── pkgconfig
│       └── luajit.pc
└── share
    ├── lua
    │   └── 5.1
    ├── luajit-2.0.1
    │   └── jit
    │       ├── bc.lua
    │       ├── bcsave.lua
    │       ├── dis_arm.lua
    │       ├── dis_mipsel.lua
    │       ├── dis_mips.lua
    │       ├── dis_ppc.lua
    │       ├── dis_x64.lua
    │       ├── dis_x86.lua
    │       ├── dump.lua
    │       ├── v.lua
    │       └── vmdef.lua
    └── man
        └── man1
            └── luajit.1
	
	 -->
	
	
</project>
	