#!/bin/bash

#  Copyright 2013 Daniel Giribet <dani - calidos.cat>
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

### BEGIN INIT INFO
# Provides:          storm-worker
# Required-Start:    networking zookeeper
# Required-Stop:     networking zookeeper
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Storm supervisor daemon
# Description:       Storm worker supervisor process
#                    ran on worker node machines
### END INIT INFO

source /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0


retval_=0
mon_=${install.prefix_}/mon/bin/mon
mon_log_='/var/log/mon/mon-storm-supervisor.log'
pidfile_='/var/run/storm-supervisor.pid'
monpid_='/var/run/mon-storm-supervisor.pid'
desc_='Storm worker supervisor daemon'
lockfile_='/var/lock/subsys/storm-supervisor'
storm_supervisor_='/usr/bin/python ${storm.installfolder_}/bin/storm supervisor'

start() {
 	echo -n $"Starting $desc_ (storm): "
	$mon_ -d \
		-l "$mon_log_" \
		-s 2  -p "$pidfile_" \
		-m "$monpid_" \
		"su - '${storm.username_}' -m --session-command='$storm_supervisor_'"
  	retval_=$?
  	[ $retval_ -eq 0 ] && success
  	[ $retval_ -ne 0 ] && failure
	echo
  	[ $retval_ -eq 0 ] && touch "$lockfile_"
    return $retval_
}

stop() {
 	echo -n $"Stopping $desc_ (storm): "
	killproc -p "$monpid_" -SIGTERM
  	retval_=$?
  	sleep 1
  	[ $retval_ -eq 0 ] && success
  	[ $retval_ -ne 0 ] && failure
  	echo
  	[ $retval_ -eq 0 ] && rm -f "$lockfile_" "$pidfile_" "$monpid_"
    return $retval_
}

restart() {
  stop
  start
}

checkstatus(){
	if [ ! -f "$pidfile_" ]; then
		echo "Nimbus is not running (no pid file found)" && return 1
	fi
	$mon_ --pidfile "$pidfile_" -S
	retval_=$?
}

condrestart(){
  [ -e "$lockfile" ] && restart || :
}

case "$1" in
  start)
    start
    ;;
  stop)
	checkstatus || exit 0
    stop
    ;;
  status)
    checkstatus
    ;;
  restart)
    restart
    ;;
  condrestart)
    condrestart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|condrestart}"
    exit 1
esac

exit $retval_
